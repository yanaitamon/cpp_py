このリポジトリの説明
CTシステムのWeb API化をしたい。
C++のデスクトップアプリケーションにAPIを実装。
PythonでWebからPythonライブラリにアクセスするところを試している。
C++との連携部分はboost::pythonを用いた。
クライアント側との非同期な通信をしたいのでpywebsocketも試している。

cppwork:
C++とPythonを繋ぐためにboost::pythonの関数でVC++ MFCのdllの関数を
ラップしてPython側から実行できるようにしている。
VC++ 2005のプロジェクト。

cswork:
Windowsアプリケーションとboost::pythonのpydファイルのプロセス間通信の
テスト用に作った、簡易的なMemoryMappedFileの情報をwriteする側のexeのプロジェクト。
VC# 2005のプロジェクト。

pywork:
Python側でboost::pythonのライブラリを使うプログラム。
クライアント側から命令を一発送ったら、後はサーバ側でC++既存ライブラリの
演算をして、随時進捗ステータスなどをクライアントにpushするような作りを
イメージして、WebSocketを使っている。

現在、pywebsocket-0.7.6を使用中。
pywork取得後、
---------------
cd "～\pywebsocket-0.7.6\src"
set PYTHONPATH=.
python mod_pywebsocket/standalone.py -p 8800 -d example
---------------
で、ローカルホスト8800番で簡易サーバ起動。

console.html or console2.htmlを通してxxx_wsh.pyファイルの動きを確かめられる。
bstpy2_wsh.pyを呼び出すことで非同期の演算とステータス取得が確かめられる。

